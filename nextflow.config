/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Joon-Klaps/viralgenie Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                       = null
    metadata                    = null

    // PREPROCESSING
    skip_preprocessing          = false
    skip_fastqc                 = false
    save_final_reads            = true
    save_intermediate_reads     = false

    // > UMI
    with_umi                    = false
    skip_umi_extract            = true
    umi_discard_read            = 0 // 0 = no discard
    umi_deduplicate             = 'read'

    // > Trim
    trim_tool                   = 'fastp'
    skip_trimming               = false
    adapter_fasta               = null
    save_trimmed_fail           = false
    save_merged                 = false
    min_trimmed_reads           = 1

    // > complexity
    skip_complexity_filtering   = true
    decomplexifier              = 'prinseq'
    contaminants                = null

    // > host removal
    skip_hostremoval            = false
    host_k2_db                  = 's3://ngi-igenomes/test-data/viralrecon/kraken2_human.tar.gz'
    host_k2_library             = 'human'
    skip_host_fastqc            = false

    // METAGENOMIC DIVERSITY
    skip_read_classification        = false
    save_databases                  = false
    read_classifiers                = 'kraken2,kaiju'
    // > Kraken2
    kraken2_db                      = "https://genome-idx.s3.amazonaws.com/kraken/k2_viral_20230314.tar.gz"
    kraken2_save_reads              = false
    kraken2_save_readclassification = false
    kraken2_save_minimizers         = false
    // > Bracken
    bracken_db                      = "https://genome-idx.s3.amazonaws.com/kraken/k2_viral_20230314.tar.gz"
    // > Kaiju
    kaiju_db                        = "https://kaiju-idx.s3.eu-central-1.amazonaws.com/2023/kaiju_db_rvdb_2023-05-26.tgz"
    kaiju_taxon_rank                = 'species'
    keep_unclassified               = true

    // ASSEMBLY
    skip_assembly               = false
    mapping_constraints         = null
    assemblers                  = 'spades,megahit'
    skip_sspace_basic           = false
    skip_contig_prinseq         = false
    read_distance               = 350
    read_distance_sd            = .75
    read_orientation            = "FR"

    // > SPADES
    spades_mode                 = 'rnaviral'
    spades_hmm                  = null
    spades_yml                  = null
    // > MEGAHIT
    // > TRINITY


    // GENOME POLISHING
    skip_polishing               = false
    save_intermediate_polishing  = false
    skip_singleton_filtering     = false

    // > BLAST
    reference_pool              = "https://rvdb.dbi.udel.edu/download/C-RVDBvCurrent.fasta.gz"

    // > Clustering
    cluster_method                   = 'cdhitest'
    network_clustering               = 'connected_components'
    identity_threshold               = 0.85
    min_contig_size                  = 500
    max_n_perc                       = 50
    perc_reads_contig                = 5
    skip_precluster                  = false
    precluster_classifiers           = 'kraken2,kaiju'

    // > HYBRID CONSENSUS
    skip_nocov_to_reference       = false

    // >> CDHITEST
    // >> VSEARCH
    max_contig_size             = 10000000 // 10 Mb Max for human viruses is around 1Mb

    // > Iterative mapping & consensus calling
    skip_iterative_refinement       = false
    mapper                          = 'bwamem2' // bwamem2, bowtie2, bwamem
    intermediate_mapper             = mapper
    iterative_refinement_cycles     = 2
    deduplicate                     = true
    variant_caller                  = 'ivar' // ivar, bcftools
    allele_frequency                = 0.75
    call_intermediate_variants      = false
    intermediate_variant_caller     = variant_caller
    ivar_header                     = null
    consensus_caller                = 'ivar' // ivar, bcftools
    intermediate_consensus_caller   = 'bcftools'
    min_mapped_reads                = 200
    intermediate_mapping_stats      = true
    mapping_stats                   = true

    // variant calling
    skip_variant_calling        = false

    // CONSENSUS QC
    skip_consensus_qc           = false
    skip_checkv                 = false
    checkv_db                   = null // downloads latest version
    skip_prokka                 = false
    prokka_db                   = null
    skip_quast                  = false
    skip_blast_qc               = false
    skip_alignment_qc           = true
    annotation_db               = "ftp://ftp.expasy.org/databases/viralzone/2020_4/virosaurus90_vertebrate-20200330.fas.gz"
    skip_annotation             = false
    mmseqs_searchtype           = 4

    // Global
    prefix                      = null
    // global_prefix               = null

    // MultiQC options
    multiqc_config              = null
    multiqc_title               = null
    multiqc_logo                = "https://github.com/Joon-Klaps/viralgenie/blob/dev/docs/images/ViralGenie-nf-core-theme.png?raw=true"
    max_multiqc_email_size      = '25.MB'
    custom_table_headers        = "https://github.com/Joon-Klaps/viralgenie/raw/refs/heads/dev/assets/custom_table_headers.yml"
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    clean_output_on_error        = false
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null


    // Schema validation default options
    validate_params                   = true

    // Module specific arguments
    arguments_fastqc            = '--quiet'
    arguments_fastp             = '--cut_front --cut_tail --trim_poly_x --cut_mean_quality 30 --qualified_quality_phred 30 --unqualified_percent_limit 10 --length_required 50'
    arguments_trimmomatic       = "ILLUMINACLIP:${params.adapter_fasta}:2:30:10"
    arguments_umitools_extract  = null
    // leave empty for directional strategy add -x for cluster strategy
    arguments_humid             = '-a -m 1'
    arguments_bbduk             = 'entropy=0.3 entropywindow=50 entropymask=f'
    arguments_prinseq_reads     = null
    arguments_kraken2_host      = null
    arguments_blast_makeblastdb = '-dbtype nucl'

    arguments_kraken2           = '--report-minimizer-data'
    arguments_bracken           = null
    arguments_kaiju             = '-v'
    arguments_kaiju2table       = "-e -l ${params.kaiju_taxon_rank}"
    arguments_kaiju2krona       = '-v -u'
    arguments_krona             = null
    arguments_kreport2krona     = null

    arguments_spades            = '--rnaviral'
    arguments_quast             = '--min-contig 0'
    arguments_sspace_basic      = '-x 1 -o 15 -r 0.75'
    arguments_megahit           = null
    arguments_trinity           = '--max_reads_per_graph 100000'
    arguments_prinseq_contig    = '-out_format 1 -lc_dust .20'

    arguments_blastn            = '-max_target_seqs 5'
    arguments_blast_filter      = '--escore 0.01 --bitscore 50 --percent-alignment 0.80' // set 0 to deactivate filter
    arguments_kraken2_contig    = null
    arguments_kaiju_contig      = '-v'
    arguments_extract_precluster = "--keep-unclassified ${params.keep_unclassified} --merge-strategy lca"
    arguments_cdhit              = "-c ${params.identity_threshold} -mask rRyYkKsSwWmMbBdDhHvVnN"
    arguments_vsearch            = "--maxseqlength ${params.max_contig_size} --id ${params.identity_threshold} --strand both --iddef 0 --no_progress --qmask none"
    arguments_mmseqs_linclust    = "--min-seq-id ${params.max_contig_size} -c ${params.identity_threshold} --cov-mode 2 -s 7 --cluster-mode 0"
    arguments_mmseqs_cluster     = "--min-seq-id ${params.max_contig_size} -c ${params.identity_threshold} --cov-mode 2 -s 7 --cluster-mode 0"
    arguments_vrhyme             = '--mems 50'
    arguments_mash_dist          = '-s 4000 -k 15'
    arguments_network_cluster    = "--score ${params.identity_threshold}"
    arguments_extract_cluster    = "--perc_reads_contig ${params.perc_reads_contig}"
    arguments_minimap2_align     = null
    arguments_minimap2_index     = null

    arguments_mash_sketch       = '-i'
    arguments_mash_screen       = null
    arguments_select_reference  = null

    arguments_bwamem2_index     = null
    arguments_bwa_index         = null
    arguments_bwa_mem           = null
    arguments_bowtie2_build     = null
    arguments_bowtie2_align     = '--local --very-sensitive-local --seed 1'
    arguments_umitools_dedup    = "--umi-separator=':' --method cluster --unmapped-reads use"
    arguments_picard_markduplicates = '--ASSUME_SORTED true --VALIDATION_STRINGENCY LENIENT --TMP_DIR tmp --REMOVE_DUPLICATES true'
    arguments_picard_collectmultiplemetrics = '--ASSUME_SORTED true --VALIDATION_STRINGENCY LENIENT --TMP_DIR tmp'
    arguments_custom_mpileup    = null
    arguments_mosdepth          = null

    // ignore overlapping reads - Do not skip anomalous read pairs in variant calling. - Maximum number of reads to start to consider at each location - Minimum base quality
    arguments_bcftools_mpileup1 = '--ignore-overlaps --count-orphans --max-depth 800000 --min-BQ 20 --annotate FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/DP,FORMAT/SP,INFO/AD,INFO/ADF,INFO/ADR'
    // Ploidy of the sample, how many alleles should be considered at a location - Keep alternate alleles - Masked reference positions (reference is 'N') need to be considered as well - Call multiallelic variants - Only output variant sites that are significant
    arguments_bcftools_mpileup2 = '--ploidy 2 --keep-alts --keep-masked-ref --multiallelic-caller --variants-only'
    // Minimum depth of coverage at a site to consider it for variant calling
    arguments_bcftools_mpileup3 = "--include 'INFO/DP>=10'"
    // Do not turn on indel normalisation, only split up - Output compressed VCF - split multiallelic sites into biallelic records (-) and SNPs and indels should be merged into a single record, specify any.
    arguments_bcftools_norm     = '--do-not-normalize --output-type z --multiallelics -any'
    arguments_bcftools_stats    = null
    arguments_samtools_stats    = null
    arguments_samtools_idxstats = null
    arguments_samtools_flagstat = null
    arguments_tabix             = '-p vcf -f'
    arguments_bedtools_merge    = null
    arguments_bedtools_maskfasta = null
    arguments_bcftools_consensus = null

    arguments_ivar_variants1    = '-q 20 -m 10'
    arguments_ivar_variants2    = '--ignore-overlaps --count-orphans --max-depth 0 --no-BAQ --min-BQ 0'
    // -a output all postions
    arguments_make_bed_mask     = '-a --ignore-overlaps --count-orphans --max-depth 0 --no-BAQ --min-BQ 0'

    // frequency to call consensus, majority rule - minimum quality score of base - minimum depth to call consensus - Characters to print in regions with less coverage
    arguments_ivar_consensus1  =  '-t 0 -q 20 -m 10 -n N'
    // Do not skip anomalous read pairs in variant calling. - Maximum number of reads to start to consider at each location, 0 means no limit - Minimum base quality - Disable probabilistic realignment for the computation of base alignment quality - Output absolutely all positions, including unused reference sequences
    arguments_ivar_consensus2  = '--count-orphans --max-depth 0 --min-BQ 20 --no-BAQ -aa'

    arguments_checkv            = '--remove_tmp'
    arguments_mafft_iterations  = '--auto --adjustdirection'
    arguments_mafft_qc          = '--auto --adjustdirection'
    params.arguments_blastn_qc = '-max_target_seqs 5'
    arguments_prokka            = '--centre X --compliant --force --kingdom Viruses'
    arguments_mmseqs_search     = '--search-type 4 --rescore-mode 3'
    arguments_quast_qc          = null
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    codespace {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
    }
    test              { includeConfig 'conf/tests/test.config'              }
    test_full         { includeConfig 'conf/tests/test_full.config'         }
    test_umi          { includeConfig 'conf/tests/test_umi.config'          }
    test_fail_mapped  { includeConfig 'conf/tests/test_fail_mapped.config'  }
    test_fail_db      { includeConfig 'conf/tests/test_fail_db.config'      }
    test_nothing      { includeConfig 'conf/tests/test_nothing.config'      }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE    = 1
    R_PROFILE_USER      = "/.Rprofile"
    R_ENVIRON_USER      = "/.Renviron"
    JULIA_DEPOT_PATH    = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",
    "pipefail"    // Returns the status of the last command to exit with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'Joon-Klaps/viralgenie'
    author          = """Joon-Klaps"""
    homePage        = 'https://github.com/Joon-Klaps/viralgenie'
    description     = """A bioinformatics best-practice analysis pipeline for reconstructing consensus genomes and to identify intra-host variants from metagenomic sequencing data or enriched based sequencing data like hybrid capture."""
    mainScript      = 'main.nf'
    defaultBranch   = 'main'
    nextflowVersion = '!>=24.04.2'
    version         = '0.1.2'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    monochromeLogs         = false
    help.showHidden        = false
    lentientMode           = false
    failUnrecognisedParams = false
    ignoreParamsFile       = []
    defaultIgnoreParams    = ["genomes"]
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
