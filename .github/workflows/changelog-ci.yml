name: Update CHANGELOG.md
on:
  issue_comment:
    types: [created, edited, deleted]
  pull_request_target:
    types: [opened]
    branches:
      - dev

jobs:
  update_changelog:
    runs-on: ubuntu-latest
    # Run if comment is on a PR with the main repo, and if it contains the magic keywords.
    # Or run on PR creation, unless asked otherwise in the title.
    if: |
      github.event_name == 'pull_request_target' ||
      github.event.issue.pull_request && contains(github.event.comment.body, '@Klaps-bot changelog')
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          token: ${{ secrets.KLAPS_BOT_AUTH_TOKEN }}

      - name: React on comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        if: |
          github.event_name == 'issue_comment'
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes
          token: ${{ secrets.KLAPS_BOT_AUTH_TOKEN }}

      # Action runs on the issue comment, so we don't get the PR by default.
      # Use the GitHub CLI to check out the PR:
      - name: Checkout Pull Request
        env:
          GH_TOKEN: ${{ secrets.KLAPS_BOT_AUTH_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            PR_NUMBER="${{ github.event.issue.number }}"
          elif [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
          fi
          gh pr checkout $PR_NUMBER
      - uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: "3.11"

      - name: Install packages
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
      - name: Update CHANGELOG.md from the PR title
        env:
          COMMENT: ${{ github.event.comment.body }}
          GH_TOKEN: ${{ secrets.KLAPS_BOT_AUTH_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            export PR_NUMBER='${{ github.event.issue.number }}'
            export PR_TITLE='${{ github.event.issue.title }}'
          elif [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            export PR_NUMBER='${{ github.event.pull_request.number }}'
            export PR_TITLE='${{ github.event.pull_request.title }}'
          fi
          python ${GITHUB_WORKSPACE}/.github/workflows/changelog.py
      - name: Check if CHANGELOG.md actually changed
        run: |
          git diff --exit-code ${GITHUB_WORKSPACE}/CHANGELOG.md || echo "changed=YES" >> $GITHUB_ENV
          echo "File changed: ${{ env.changed }}"
      - name: Set up Python 3.11
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: 3.11
          cache: "pip"

      - name: Install pre-commit
        run: pip install pre-commit

      - name: React if updated
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        if: |
          github.event_name == 'issue_comment' && env.changed == 'YES'
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: hooray
          token: ${{ secrets.KLAPS_BOT_AUTH_TOKEN }}

      - name: React if not updated
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        if: |
          github.event_name == 'issue_comment' && env.changed != 'YES'
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: confused
          token: ${{ secrets.KLAPS_BOT_AUTH_TOKEN }}

      - name: Run pre-commit checks
        if: |
          env.changed == 'YES'
        run: |
          pre-commit run --all-files
      - name: Commit and push changes
        if: |
          env.changed == 'YES'
        run: |
          git config user.email "167566642+Klaps-bot@users.noreply.github.com"
          git config user.name "Klaps-bot"
          git config push.default upstream
          git add ${GITHUB_WORKSPACE}/CHANGELOG.md
          git status
          git commit -m "[automated] Update CHANGELOG.md"
          git push
